}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(state)
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(state)
if (x>10) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state0
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
state
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(state)
if (x>10) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(rates)
print(numEvents)
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(state)
if (x>1) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
totDelta
state
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
state
totDelta
state + totDelta
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print("------------")
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state="+state))
if (x>1) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print("------------")
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if (x>1) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print("------------")
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if (t>10) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print("------------")
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if (i>10) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print("------------")
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(paste("------------ ",1))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(paste("------------ i= ",i))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(i in seq_len(length(eventSources))) {
eSrc <- eventSources[i]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[i] <- rbinom(1,size=state[eSrc],prob=rates[i])
}
print(paste("------------ i= ",i))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(i>5) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(i>5) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(i>30) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print(paste("rates=",rates,"   dt=",dt))
print(paste("numEvents=",numEvents))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(t>1.1) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print("rates")
print(rates)
print(paste("numEvents=",numEvents, " t=",t))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(t>1.1) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print("rates")
print(rates)
print(paste("numEvents=",numEvents, " t=",t))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(t>1.2) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print("rates")
print(rates)
print(paste("numEvents=",numEvents, " t=",t))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
if(t>1.2) break
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print("rates")
print(rates)
print(paste("numEvents=",numEvents, " t=",t))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
state <- state0[stateNames]
i <- 1
states <- list()
states[[i]] <- c(t=times[1], state)
numEvents <- numeric(numEventTypes) ## events generated for (t,dt)
for (t in times[-1]) {
i <- i+1
dt <- times[i]-times[i-1]
rates <- f.eRates(state,params,t,dt)
for(j in seq_len(length(eventSources))) {
eSrc <- eventSources[j]
# print(paste("rbinom ",state[eSrc],rates[i]))
numEvents[j] <- rbinom(1,size=state[eSrc],prob=rates[j])
}
print(paste("------------ i= ",i))
print("rates")
print(rates)
print(paste("numEvents=",numEvents, " t=",t))
totDelta <- colSums(deltaArray * numEvents)
print(totDelta)
state <- state + totDelta
print(paste("state=",state))
#state <- state + f(t,dt,state,params)
#states[[i]] <- c(t=t,state)
}
